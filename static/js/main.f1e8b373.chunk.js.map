{"version":3,"sources":["Components/Navigation.js","Components/Summary.js","Components/Profile.js","Components/ProjectCard.js","Components/ProjectModal.js","Components/Contact.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Navigation","Navbar","bg","expand","fixed","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","className","Summary","Jumbotron","Profile","Container","fluid","Row","Col","connect","state","showModal","reducerModal","props","projectData","useState","sort","a","b","reduce","rows","key","index","push","length","dataState","map","rData","rIdx","data","i","Card","style","width","cursor","onClick","dispatch","type","payload","Img","height","variant","src","thumbnail","Body","Title","title","Text","modalState","Modal","size","show","onHide","aria-labelledby","centered","Header","closeButton","Image","class","starttime","endtime","environment","role","summary","link","href","target","rel","Footer","Button","Contact","RESULT_MSG","inputName","setInputName","inputEmail","setInputEmail","inputMsg","setInputMsg","resultMsg","setResultMsg","showToast","setShowToast","Form","onSubmit","e","preventDefault","emailjs","sendForm","then","result","console","log","catch","error","finally","Group","InputGroup","name","placeholder","value","onChange","required","position","top","bottom","left","right","display","justifyContent","alignItems","Toast","onClose","delay","autohide","store","createStore","combineReducers","action","found","find","item","App","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f1e8b373.chunk.js","sourcesContent":["import { Navbar, Nav } from 'react-bootstrap';\r\nimport { HashLink as Link } from 'react-router-hash-link'\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\" fixed=\"top\">\r\n      <Navbar.Brand as={Link} to=\"#\">Jehko's Portfolio</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link as={Link} to=\"#\">Home</Nav.Link>\r\n          <Nav.Link as={Link} to=\"#profile\">About</Nav.Link>\r\n          <Nav.Link as={Link} to=\"#project\">Project</Nav.Link>\r\n          <Nav.Link as={Link} to=\"#contact\">Contact Me</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Navigation;","import { Jumbotron } from 'react-bootstrap';\r\n\r\nfunction Summary() {\r\n  return (\r\n    <Jumbotron className=\"background mb-0 rounded-0\">\r\n      <div id=\"summary\" className=\"summary position-relative\">\r\n        <h1>개발자<br/>Jehko입니다.</h1>\r\n      </div>\r\n    </Jumbotron>\r\n  )\r\n}\r\n\r\nexport default Summary;\r\n","import { Jumbotron, Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction Profile () {\r\n  return (\r\n    <Jumbotron id=\"profile\" className=\"profile\">\r\n      <Container fluid className=\"postion-absolute\">\r\n        <Row>\r\n          <Col className=\"profile-left\">\r\n            <div className=\"profile-item\">\r\n              <h2>PROFILE</h2>\r\n              <blockquote>\r\n                안녕하세요. 개발자 고정훈입니다.<br/>\r\n                학부때 프로젝트를 진행하며 개발에 대한 매력을 느꼈습니다.<br/>\r\n                2013년 첫 회사에 입사하여 실무를 시작했고, 끊임없이 '재미있는 것'을\r\n                찾고있습니다.<br/>\r\n                최근에는 React, JPA에 관심이 생겨 공부하고 있습니다.                \r\n              </blockquote>\r\n            </div>\r\n            <div className=\"profile-item\">\r\n              <h2>SKILLS</h2>\r\n              <blockquote>\r\n                <span className=\"word-token\">JAVA</span>\r\n                <span className=\"word-token\">SPRING</span>\r\n                <span className=\"word-token\">Javascript</span>\r\n                <span className=\"word-token\">React</span>\r\n                <span className=\"word-token\">Oracle</span>\r\n                <span className=\"word-token\">Postgresql</span>\r\n              </blockquote>\r\n            </div>\r\n            <div className=\"profile-item\">\r\n              <h2>TOOLS</h2>\r\n              <blockquote>\r\n                <span className=\"word-token\">Eclipse</span>\r\n                <span className=\"word-token\">VS Code</span>\r\n                <span className=\"word-token\">Toad</span>\r\n                <span className=\"word-token\">pgAdmin</span>\r\n                <span className=\"word-token\">SLACK</span>\r\n                <span className=\"word-token\">GIT</span>\r\n                <span className=\"word-token\">SVN</span>\r\n              </blockquote>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"profile-center\">\r\n            <div className=\"profile-item\">\r\n              <h2>CONTACT</h2>\r\n              <blockquote>\r\n                <p>Email jehko08@naver.com</p>\r\n                <p>Addr. 서울시 구로구 구일로</p>\r\n              </blockquote>\r\n            </div>\r\n            <div className=\"profile-item\">\r\n              <h2>EDUCATION</h2>\r\n              <blockquote>\r\n                <p>2008 서울대진고등학교 졸업</p>\r\n                <p>2012 한성대학교 졸업</p>\r\n              </blockquote>\r\n            </div>\r\n            <div className=\"profile-item\">\r\n              <h2>PRIZE</h2>\r\n              <blockquote>\r\n                <p>2012 제6회 공개SW 개발자대회 동상</p>\r\n              </blockquote>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"profile-right\">\r\n            <div className=\"profile-item\">\r\n              <h2>CERTIFICATE</h2>\r\n              <blockquote>\r\n                <p>정보처리기사(2012)</p>\r\n                <p>SQLD(2021)</p>\r\n              </blockquote>\r\n            </div>\r\n            <div className=\"profile-item\">\r\n              <h2>CAREER <span className=\"h5\">(7년3개월)</span></h2>\r\n              <blockquote>\r\n                <p><span>2020.12 - 현재</span><span className=\"p-5\">ktds</span></p>\r\n                <p><span>2018.06 - 2020.12</span><span className=\"p-4\">리네아정보기술(프리랜서)</span></p>\r\n                <p><span>2017.04 - 2018.04</span><span className=\"p-4\">타파크로스</span></p>\r\n                <p><span>2013.07 - 2016.10</span><span className=\"p-4\">휴먼아이티에스</span></p>\r\n              </blockquote>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Jumbotron>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport projectData from '../ProjectData.json';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction makeArray(projectData) {\r\n  let rowArray = [];\r\n  projectData.sort((a, b) => b.id - a.id);\r\n\r\n  rowArray = projectData.reduce((rows, key, index) => (index % 3 === 0 ? rows.push([key]) : rows[rows.length - 1].push(key)) && rows, []);\r\n  return rowArray;\r\n}\r\n\r\nfunction ProjectCard (props) {\r\n  let [dataState, setDataState] = useState(makeArray(projectData));\r\n\r\n  return (\r\n    <Container id=\"project\" className=\"pt-3\">\r\n      {\r\n        dataState.map((rData, rIdx) => {\r\n          return (\r\n          <Row key={ rIdx }>\r\n            {\r\n              rData.map((data, i) => {\r\n                return (\r\n                  <Col className=\"d-flex justify-content-center mb-5\" key={ data.id }>\r\n                    <Card style={{ width:'18rem', cursor:'pointer' }} onClick={() => { props.dispatch({type: \"show\", payload: { id: data.id }}) }}>\r\n                      <Card.Img style={{ height: '10rem' }} variant=\"top\" src={ data.thumbnail } />\r\n                      <Card.Body>\r\n                        <Card.Title>{ data.title }</Card.Title>\r\n                        <Card.Text>\r\n                          {/* { data.summary } */}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                )\r\n              })\r\n            }\r\n          </Row>\r\n          )\r\n        })\r\n      }\r\n    </Container>\r\n  )\r\n}\r\n\r\nfunction stateToProps(state) {\r\n  return {\r\n    showModal: state.reducerModal\r\n  }\r\n}\r\n\r\nexport default connect(stateToProps)(ProjectCard);\r\n// export default ProjectCard;","import React from \"react\";\r\nimport { Modal, Button, Row, Col, Image } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction ProjectModal(props) {\r\n  return (\r\n    <Modal\r\n      size=\"lg\"\r\n      show={props.modalState.showModal}\r\n      onHide={() => props.dispatch({ type: \"hide\" })}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\" centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">{ props.modalState.title }</Modal.Title>\r\n      </Modal.Header>\r\n      <Row>\r\n        <Col className=\"col-sm-4 d-flex\">\r\n          <Image src={ props.modalState.thumbnail } className=\"w-100 h-auto m-3 align-self-center\"></Image>\r\n        </Col>\r\n        <Col className=\"col-sm-8\">\r\n          <Modal.Body>\r\n            <ul class=\"list-group list-group-flush\">\r\n              <li class=\"list-group-item\">\r\n                <div>기간</div>\r\n                <div>{props.modalState.starttime + ' - ' + props.modalState.endtime}</div></li>\r\n              <li class=\"list-group-item\">\r\n                <div>개발환경</div>\r\n                <div>{ props.modalState.environment }</div>\r\n              </li>\r\n              <li class=\"list-group-item\">\r\n                <div>담당업무</div>\r\n                <div>{ props.modalState.role }</div>\r\n              </li>\r\n              <li class=\"list-group-item\">\r\n                <div>{ props.modalState.summary }</div>\r\n              </li>\r\n              {\r\n                props.modalState.link ? (\r\n                  <li class=\"list-group-item\">\r\n                    <div>관련 링크</div>\r\n                    <div><a href={props.modalState.link} target=\"_blank\" rel=\"noreferrer\">{ props.modalState.link }</a></div>\r\n                  </li>\r\n                ) : (\r\n                  null\r\n                )\r\n              }\r\n            </ul>\r\n          </Modal.Body>\r\n        </Col>\r\n      </Row>\r\n      \r\n      <Modal.Footer>\r\n        <Button onClick={() => props.dispatch({ type: \"hide\" })}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction stateToProps(state) {\r\n  return {\r\n    modalState: state.reducerModal,\r\n  };\r\n}\r\n\r\nexport default connect(stateToProps)(ProjectModal);\r\n// export default ProjectModal;\r\n","import React, { useState } from \"react\";\r\nimport { Jumbotron, Container, Row, Col, Form, Card, InputGroup, Toast } from \"react-bootstrap\";\r\nimport emailjs from \"emailjs-com\";\r\n\r\nfunction Contact() {\r\n  const SERVICE_ID = 'emailjs_jehko_gmail';\r\n  const TEMPLATE_ID = 'template_5zx2e8s';\r\n  const USER_ID = 'user_9L2TMeWCvoO0GCXpRtXVM';\r\n\r\n  const RESULT_MSG = ['메일 전송을 완료했습니다.', '메일 전송을 실패했습니다.'];\r\n  const TOAST_TIME = 2000;\r\n\r\n  const [inputName, setInputName] = useState('');\r\n  const [inputEmail, setInputEmail] = useState('');\r\n  const [inputMsg, setInputMsg] = useState('');\r\n\r\n  const [resultMsg, setResultMsg] = useState();\r\n  const [showToast, setShowToast] = useState(false);\r\n\r\n  const resetInput = () => {\r\n    setInputName('');\r\n    setInputEmail('');\r\n    setInputMsg('');\r\n  }\r\n\r\n  const sendEmail = (e) => {\r\n    e.preventDefault();\r\n\r\n    emailjs.sendForm(SERVICE_ID, TEMPLATE_ID, e.target, USER_ID)\r\n      .then((result) => {\r\n        console.log(result);\r\n        setResultMsg(RESULT_MSG[0]);\r\n        resetInput();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setResultMsg(RESULT_MSG[1]);\r\n      })\r\n      .finally(() => {\r\n        setShowToast(true);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Jumbotron id=\"contact\" className=\"Contact\">\r\n      <Container>\r\n        <Row className=\"justify-content-center\">\r\n          <Col className=\"col-12 col-md-8 col-lg-6 pb-5\">\r\n            <Form onSubmit={sendEmail}>\r\n              <Card className=\"rounded-10\">\r\n                <Card.Header className=\"p-0\">\r\n                  <div className=\"bg-dark text-white text-center py-2\">\r\n                    <h3><i className=\"fa fa-envelope\"></i> Contact Me</h3>\r\n                    <p className=\"m-0\"></p>\r\n                  </div>\r\n                </Card.Header>\r\n                <Card.Body className=\"p-3\">\r\n                  <Form.Group>\r\n                    <InputGroup className=\"mb-2\">\r\n                      <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                          <i className=\"fa fa-user text-info\"></i>\r\n                        </div>\r\n                      </div>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"name\"\r\n                        placeholder=\"이름\"\r\n                        value={inputName}\r\n                        onChange={(e) => setInputName(e.target.value)}\r\n                        required\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <InputGroup className=\"mb-2\">\r\n                      <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                          <i className=\"fa fa-envelope text-info\"></i>\r\n                        </div>\r\n                      </div>\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        name=\"email\"\r\n                        placeholder=\"보내시는 분\"\r\n                        value={inputEmail}\r\n                        onChange={(e) => setInputEmail(e.target.value)}\r\n                        required\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group>\r\n                    <InputGroup className=\"mb-2\">\r\n                      <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                          <i className=\"fa fa-comment text-info\"></i>\r\n                        </div>\r\n                      </div>\r\n                      <textarea\r\n                        className=\"form-control\"\r\n                        rows=\"4\"\r\n                        name=\"message\"\r\n                        placeholder=\"메시지\"\r\n                        value={inputMsg}\r\n                        onChange={(e) => setInputMsg(e.target.value)}\r\n                        required\r\n                      ></textarea>\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n\r\n                  <div className=\"text-center\">\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"SEND\"\r\n                      className=\"btn btn-dark rounded-8 py-2 w-10\"\r\n                    />\r\n                  </div>\r\n                  {showToast &&\r\n                    <div style={{position:'absolute',top:0, bottom:0, left:0, right:0, display:'flex', justifyContent:'center', alignItems:'center'}}>\r\n                      <Toast onClose={() => {setShowToast(false)}} show={showToast} delay={TOAST_TIME} autohide>\r\n                        <Toast.Header><strong className=\"mr-auto\">{ resultMsg }</strong></Toast.Header>\r\n                      </Toast>\r\n                    </div>\r\n                  }\r\n                </Card.Body>\r\n              </Card>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Jumbotron>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react';\nimport Navigation from './Components/Navigation'\nimport Summary from './Components/Summary'\nimport Profile from './Components/Profile'\nimport ProjectCard from './Components/ProjectCard'\nimport ProjectModal from './Components/ProjectModal'\nimport Contact from './Components/Contact'\n\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\nimport projectData from './ProjectData.json';\n\nimport './App.css';\n\nlet modalState = { showModal: false };\n\nfunction reducerModal(state = modalState, action) {\n  if (action.type === \"show\") {\n    let found = projectData.find((item) => { return item.id === action.payload.id});\n    state = {showModal: true, ...found}\n    console.log(state);\n    return state;\n  } else if (action.type === \"hide\"){\n    state = {showModal: false}\n    return state;\n  } else {\n    return state;\n  }\n  \n}\n\nlet store = createStore(combineReducers({ reducerModal }))\n\nfunction App() {\n  return (\n    <Provider store={ store }>\n      <div className=\"App\">\n        <Navigation></Navigation>\n        <Summary></Summary>\n        <Profile></Profile>\n        <ProjectCard></ProjectCard>\n        <ProjectModal></ProjectModal>\n        <Contact></Contact>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}